generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cultivationpot {
  cultivation_pot_id Int       @id @default(autoincrement())
  type_pot_id        Int
  index              Int?
  farm_id            Int
  device_id          Int
  img_path           String?   @db.LongText
  ai_result          String?
  status             String?   @default("active")
  pot_name           String?
  age                Int       @default(1)
  create_pot         DateTime? @db.Date
  device             device    @relation(fields: [device_id], references: [device_id], onUpdate: Restrict, map: "CultivationPot_device_id_fkey")
  farm               farm      @relation(fields: [farm_id], references: [farm_id], onUpdate: Restrict, map: "CultivationPot_farm_id_fkey")
  typepot            typepot   @relation(fields: [type_pot_id], references: [type_pot_id], onDelete: Cascade, map: "CultivationPot_type_pot_id_fkey")

  @@index([device_id], map: "CultivationPot_device_id_fkey")
  @@index([farm_id], map: "CultivationPot_farm_id_fkey")
  @@index([type_pot_id], map: "CultivationPot_type_pot_id_fkey")
}

model device {
  device_id      Int              @id @default(autoincrement())
  device_name    String
  description    String?
  status         String?          @default("inactive")
  device_type    String?
  farm_id        Int
  cultivationpot cultivationpot[]
  farm           farm             @relation(fields: [farm_id], references: [farm_id], onUpdate: Restrict, map: "link_farm_id")
  growingpot     growingpot[]

  @@index([farm_id], map: "link_farm_id")
}

model farm {
  farm_id          Int              @id @default(autoincrement())
  farm_name        String
  farm_type        String?
  farm_description String?
  farm_status      Boolean?         @default(true)
  temperature      Float?
  humidity         Float?
  cultivationpot   cultivationpot[]
  device           device[]
  growingpot       growingpot[]
}

model growingpot {
  growing_pot_id Int       @id @default(autoincrement())
  type_pot_id    Int
  index          Int?
  farm_id        Int
  device_id      Int
  img_path       String?   @db.LongText
  ai_result      String?
  status         String?   @default("active")
  pot_name       String?
  age            Int       @default(1)
  create_pot     DateTime? @db.Date
  device         device    @relation(fields: [device_id], references: [device_id], onUpdate: Restrict, map: "GrowingPot_device_id_fkey")
  farm           farm      @relation(fields: [farm_id], references: [farm_id], onUpdate: Restrict, map: "GrowingPot_farm_id_fkey")
  typepot        typepot   @relation(fields: [type_pot_id], references: [type_pot_id], onDelete: Cascade, map: "GrowingPot_type_pot_id_fkey")

  @@index([device_id], map: "GrowingPot_device_id_fkey")
  @@index([farm_id], map: "GrowingPot_farm_id_fkey")
  @@index([type_pot_id], map: "GrowingPot_type_pot_id_fkey")
}

model typepot {
  type_pot_id    Int              @id @default(autoincrement())
  type_pot_name  String
  description    String?
  status         Boolean?         @default(true)
  cultivationpot cultivationpot[]
  growingpot     growingpot[]
}

model user {
  user_id  Int    @id @default(autoincrement())
  username String @unique(map: "User_username_key")
  password String
  uuid     String @unique(map: "User_uuid_key")
}
